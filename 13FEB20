Jesus, today was pulling teeth.
I needed to pomodoro hard and this... this is the last 5 minutues of my 4th one.
Took hours to get 4 pomodoros.

Anyway, today's topics were :

1) Objects.

2) Methods.

3) This.

4) For Loops.

5) While Loops.

...

Objects are .. well.. containers of data. They can have just about anything inside.
you can call this data using ".property" dot.notation - strings, arrays, other objects, numbers, everything.
You make objects with curly {} braces.

Now, there is another topic of OBJECT LITERAL v OBJECT SYNTAX,
and I don't really understand the difference honestly.

Methods are functions within objects.
I did a big-ass coding challenge and got it pretty good.
Perfectly, actually... but it took a handful of attempts, and bugsquashing.

Then we got onto Loops. I was already pretty fucking burnt.
For loops, i = 0 counter, i++, etc.
This I understood mostly - even using the limiter (>) with array.length.

While loops,  I admit - I mostly was toast. The notation is somewhat different.




========================

/*



John and his family went on a holiday and went to 3 different restaurants. The bills were $124, $48 and $268.

To tip the waiter a fair amount, John created a simple tip calculator (as a function).
He likes to tip
20% of the bill when the bill is less than $50,
15% when the bill is between $50 and $200,
10% if the bill is more than $200.

In the end, John would like to have 2 arrays:
1) Containing all three tips (one for each bill)
2) Containing all three final paid amounts (bill + tip).

(NOTE: To calculate 20% of a value, simply multiply it with 20/100 = 0.2)

GOOD LUCK ðŸ˜€
2nd attempt ======================================================================================================

var bills = [48, 128, 248];

function TipCalc(bill) {
    if (bill < 50) {
      return (bill * .2 );
    } else if (bill >= 50 && bill < 200) {
      return (bill * .15);
    } else
      return (bill * .10);
}

var tips = [TipCalc(bills[0]),
            TipCalc(bills[1]),
            TipCalc(bills[2])];

var final = [bills[0] + tips[0],
             bills[1] + tips[1],
             bills[2] + tips[2]];

// WORKS!





1st attempt ======================================================================================================
// Need imputs of bills: $124, $48, $268
// Perhaps this could be put into array, like following? ::
// var bills = [124, 48, 268];
// the question becomes - How do we feed this array's items individually into the function TipCalc?
// We probably need to loop through the array!

function TipCalc(bill) {
    if (bill < 50) {
        return (bill * 0.2);
    }  else if (bill >= 50 && bill < 200) {
        return (bill * 0.15);
    } else {
        return (bill * 0.10);
    }
    }
TipCalc(bills[ ?? ])

//make array of tips.
//var TipArray = new Array[];
//We need to append each result from TipCalc to this array,
//then add them to the array of Bills.

// adding arrays.
//

