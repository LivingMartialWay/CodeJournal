Jesus, today was pulling teeth.
I needed to pomodoro hard and this... this is the last 5 minutues of my 4th one.
Took hours to get 4 pomodoros.

Anyway, today's topics were :

1) Objects.

2) Methods.

3) This.

4) For Loops.

5) While Loops.

...

Objects are .. well.. containers of data. They can have just about anything inside.
you can call this data using ".property" dot.notation - strings, arrays, other objects, numbers, everything.
You make objects with curly {} braces.

Now, there is another topic of OBJECT LITERAL v OBJECT SYNTAX,
and I don't really understand the difference honestly.

Methods are functions within objects.
I did a big-ass coding challenge and got it pretty good.
Perfectly, actually... but it took a handful of attempts, and bugsquashing.

Then we got onto Loops. I was already pretty fucking burnt.
For loops, i = 0 counter, i++, etc.
This I understood mostly - even using the limiter (>) with array.length.

While loops,  I admit - I mostly was toast. The notation is somewhat different.




========================

/*



`/*****************************
* CODING CHALLENGE 4

Let's remember the first coding challenge where Mark and John compared their BMIs.
Let's now implement the same functionality with objects and methods.

1. For each of them, create an object with properties for their full name, mass, and height

2. Then, add a method to each object to calculate the BMI. Save the BMI to the object and also return it from the method.

3. In the end, log to the console who has the highest BMI, together with the full name and the respective BMI.
Don't forget they might have the same BMI.

Remember: BMI = mass / height^2 = mass / (height * height). (mass in kg and height in meter).

GOOD LUCK ðŸ˜€
*/
/*

----------------1st Version! WORKS!------------
var john = {
    firstName: 'John',
    height: 1.8,
    weight: 100,
    BMICalc: function() {
        return this.weight / (this.height * this.height);
    }
};

var BMI = john.BMICalc();
john.BMI = age;

----------------2nd Version! WORKS!------------------
var john = {
    firstName: 'John',
    height: 1.8,
    weight: 100,
    BMICalc: function() {
        return this.weight / (this.height * this.height);
    }
};
john.BMI = john.BMICalc();

---------------3rd Version! WORKS ------------------------
var john = {
    firstName: 'John',
    height: 1.8,
    weight: 100,
    BMICalc: function() {
        john.BMI = this.weight / (this.height * this.height);
    }
};
john.BMICalc();

---------------4th Version! Works---------------------------
var john = {
    firstName: 'John',
    height: 1.8,
    weight: 100,
    BMICalc: function() {
        this.BMI = this.weight / (this.height * this.height);
    }
};
john.BMICalc();
-------------------------------------------------------------

/////////////////////////////////////////////////////////////////
            // WHOLE SOLUTION //
/////////////////////////////////////////////////////////////////
var john = {
    firstName: 'John1',
    height: 1.8,
    weight: 100,
    BMICalc: function() {
        john.BMI = this.weight / (this.height * this.height);
    }
};

var mark = {
    firstName: 'Mark1',
    height: 1.5,
    weight: 150,
    BMICalc: function() {
        mark.BMI = this.weight / (this.height * this.height);
    }
};

function compareBMIs() {
    if (john.CalcBMI() === mark.CalcBMI()) {
    console.log('Both ' + john.firstName +' & ' + mark.firstName + 'have the same BMI\'s ' + john.BMI +' & ' + mark.BMI);
    }
    else if (john.BMI > mark.BMI) {
    console.log(john.firstName + ' has a higher BMI of ' + john.BMI)
    }
    else {
    console.log(mark.firstName + ' has a higher BMI of ' + mark.BMI)
    }
}

compareBMIs();

